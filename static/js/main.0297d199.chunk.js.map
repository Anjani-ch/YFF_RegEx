{"version":3,"sources":["components/Challenge.js","components/Challenges.js","App.js","index.js"],"names":["Challenge","_ref","challenge","_useState","useState","_useState2","Object","slicedToArray","hasError","setHasError","_useState3","testCases","_useState4","setTestCases","react_default","a","createElement","className","desc","ListGroup","map","testCase","index","Item","key","status","value","Form","onSubmit","e","preventDefault","inputElement","target","input","split","regexInput","flags","Error","regex","RegExp","updatedStatus","match","expectedResult","err","Group","Label","Control","onKeyUp","type","name","placeholder","concat","Button","variant","Challenges","challenges","difficulty","components_Challenge","App","_","Container","components_Challenges","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0297d199.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst Challenge = ({ challenge }) => {\r\n  const [hasError, setHasError] = useState(false);\r\n  const [testCases, setTestCases] = useState(challenge.testCases);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const inputElement = e.target['regex-input'];\r\n\r\n    try {\r\n      const input = inputElement.value.split('/');\r\n      const regexInput = input[1];\r\n      const flags = input[2].split('');\r\n\r\n      if(!regexInput) throw new Error('Regex cannot be empty');\r\n\r\n      const regex = new RegExp(regexInput, flags);\r\n\r\n      setTestCases(\r\n        testCases.map(testCase => {\r\n          const match = testCase.value.match(regex);\r\n          let updatedStatus;\r\n\r\n          if(match) {\r\n            if(((match[0] === match.input)) === testCase.expectedResult) {\r\n              updatedStatus = 'pass';\r\n            } else {\r\n              updatedStatus = 'fail';\r\n            }\r\n          } else {\r\n            updatedStatus = 'fail';\r\n          }\r\n\r\n          return {\r\n            value: testCase.value,\r\n            status: updatedStatus,\r\n            expectedResult: testCase.expectedResult\r\n          };\r\n        })\r\n      );\r\n    } catch (err) {\r\n      setHasError(true);\r\n\r\n      setTestCases(\r\n        testCases.map(testCase => {\r\n          return {\r\n            value: testCase.value,\r\n            status: null\r\n          };\r\n        })\r\n      );\r\n\r\n      inputElement.value = '';\r\n    }\r\n  };\r\n\r\n  const reset = e => {\r\n    if(hasError && e.target.value) {\r\n      setHasError(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='border-bottom'>\r\n      <h5 className='mb-3'>{challenge.desc}</h5>\r\n      <h6>Test Cases:</h6>\r\n\r\n      <ListGroup>\r\n        {testCases.map((testCase, index) => {\r\n          return <ListGroup.Item key={index} className={testCase.status === 'pass' ? 'bg-success text-light' : testCase.status === 'fail' ? 'bg-danger text-light' : ''}>{testCase.value}</ListGroup.Item>\r\n        })}\r\n      </ListGroup>\r\n\r\n      <div className='mt-4'>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Enter your expression here:</Form.Label>\r\n            <Form.Control onKeyUp={reset} type='text' name='regex-input' placeholder='Regular Expression' />\r\n            <Form.Label className={`text-danger ${hasError ? 'd-block' : 'd-none'}`}>Invalid Input</Form.Label>\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit' className='mt-2 mb-3'>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Challenge;","import React from 'react';\r\nimport Challenge from './Challenge.js';\r\n\r\nconst Challenges = ({ challenges, difficulty }) => {\r\n  return (\r\n    <div className='my-5'>\r\n        <h2 className='border-bottom pb-2'>{difficulty}</h2>\r\n        {challenges.map((challenge, index) => {\r\n          return <Challenge key={index} challenge={challenge} />\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Challenges;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Challenges from './components/Challenges.js';\r\n\r\nconst App = _ => {\r\n  const easyChallenges = [\r\n    {\r\n      desc: 'Create a pattern to match the specific string',\r\n      testCases: [\r\n        {\r\n          value: 'Hello, World!',\r\n          status: null,\r\n          expectedResult: true\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const mediumChallenges = [\r\n    {\r\n      desc: 'Create a patten to match digits and letters',\r\n      testCases: [\r\n        {\r\n          value: 'hd9h2dh28gd2',\r\n          status: null,\r\n          expectedResult: true,\r\n        },\r\n        {\r\n          value: 'd2dj92hd2hd1',\r\n          status: null,\r\n          expectedResult: true,\r\n        },\r\n        {\r\n          value: 'hd29DIW92dh29',\r\n          status: null,\r\n          expectedResult: true\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const hardChallenges = [\r\n    {\r\n      desc: 'Create a pattern to match an email',\r\n      testCases: [\r\n        {\r\n          value: 'example@example.com',\r\n          status: null,\r\n          expectedResult: true\r\n        },\r\n        {\r\n          value: 'example-example123@example.co.uk',\r\n          status: null,\r\n          expectedResult: true\r\n        },\r\n        {\r\n          value: 'example_example12@example.com',\r\n          status: null,\r\n          expectedResult: true\r\n        }\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n      <Container>\r\n        <h1 className='text-center border-bottom pb-3 mt-4'>RegEx Challenges</h1>\r\n\r\n        <Challenges difficulty=\"Easy\" challenges={easyChallenges} />\r\n        <Challenges difficulty=\"Medium\" challenges={mediumChallenges} />\r\n        <Challenges difficulty=\"Hard\" challenges={hardChallenges} />\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}